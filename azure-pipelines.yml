trigger:
- fahim-arif/Microfrontend-Latest

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'cudoacr'  # Replace this with your Docker Registry service connection
  imageRepository: 'cudo'
  containerRegistry: 'cudoacr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'cudo-secret'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  # Kubernetes namespace
  namespace: 'cudospace'

stages:
  - stage: BuildAndPush
    jobs:
      - job: DockerBuildAndPushMfaccount
        steps:
          - task: Docker@2
            inputs:
              command: 'buildAndPush'
              repository: 'mfaccount'
              dockerfile: 'Dockerfile-mfaccount'
              containerRegistry: '$(dockerRegistryServiceConnection)'
              tags: '$(tag)'

      - job: DockerBuildAndPushMfcontainer
        steps:
          - task: Docker@2
            inputs:
              command: 'buildAndPush'
              repository: 'mfcontainer'
              dockerfile: 'Dockerfile-mfcontainer'
              containerRegistry: '$(dockerRegistryServiceConnection)'
              tags: '$(tag)'

      - job: DockerBuildAndPushMfdocument
        steps:
          - task: Docker@2
            inputs:
              command: 'buildAndPush'
              repository: 'mfdocument'
              dockerfile: 'Dockerfile-mfdocument'
              containerRegistry: '$(dockerRegistryServiceConnection)'
              tags: '$(tag)'

      - job: DockerBuildAndPushMfproject
        steps:
          - task: Docker@2
            inputs:
              command: 'buildAndPush'
              repository: 'mfproject'
              dockerfile: 'Dockerfile-mfproject'
              containerRegistry: '$(dockerRegistryServiceConnection)'
              tags: '$(tag)'

      - job: DockerBuildAndPushMftask
        steps:
          - task: Docker@2
            inputs:
              command: 'buildAndPush'
              repository: 'mftask'
              dockerfile: 'Dockerfile-mftask'
              containerRegistry: '$(dockerRegistryServiceConnection)'
              tags: '$(tag)'

      - job: DockerBuildAndPushMsaccount
        steps:
          - task: Docker@2
            inputs:
              command: 'buildAndPush'
              repository: 'msaccount'
              dockerfile: 'Dockerfile-msaccount'
              containerRegistry: '$(dockerRegistryServiceConnection)'
              tags: '$(tag)'

      - job: DockerBuildAndPushMsdocument
        steps:
          - task: Docker@2
            inputs:
              command: 'buildAndPush'
              repository: 'msdocument'
              dockerfile: 'Dockerfile-msdocument'
              containerRegistry: '$(dockerRegistryServiceConnection)'
              tags: '$(tag)'

      - job: DockerBuildAndPushMsproject
        steps:
          - task: Docker@2
            inputs:
              command: 'buildAndPush'
              repository: 'msproject'
              dockerfile: 'Dockerfile-msproject'
              containerRegistry: '$(dockerRegistryServiceConnection)'
              tags: '$(tag)'

      - job: DockerBuildAndPushMstask
        steps:
          - task: Docker@2
            inputs:
              command: 'buildAndPush'
              repository: 'mstask'
              dockerfile: 'Dockerfile-mstask'
              containerRegistry: '$(dockerRegistryServiceConnection)'
              tags: '$(tag)'

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: BuildAndPush
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: 'Cudo-1062.cudospace'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    kubectl create namespace $(namespace)
                  displayName: 'Create namespace'

                - task: KubernetesManifest@0
                  inputs:
                    action: 'deploy'
                    kubernetesServiceConnection: 'cudoaks'
                    namespace: '$(namespace)'
                    manifests: |
                      configmap-msaccount.yaml
                      configmap-msdocument.yaml
                      configmap-msproject.yaml
                      configmap-mstask.yaml
                      deployment-mfaccount.yaml
                      deployment-mfcontainer.yaml
                      deployment-mfdocument.yaml
                      deployment-mfproject.yaml
                      deployment-mftask.yaml
                      deployment-msaccount.yaml
                      deployment-msdocument.yaml
                      deployment-msproject.yaml
                      deployment-mstask.yaml
                      service-mfaccount.yaml
                      service-mfcontainer.yaml
                      service-mfdocument.yaml
                      service-mfproject.yaml
                      service-mftask.yaml
                      service-msaccount.yaml
                      service-msdocument.yaml
                      service-msproject.yaml
                      service-mstask.yaml
                    imagePullSecrets: '$(imagePullSecret)'
                    containers: |
                      $(containerRegistry)/mfaccount:$(tag)
                      $(containerRegistry)/mfcontainer:$(tag)
                      $(containerRegistry)/mfdocument:$(tag)
                      $(containerRegistry)/mfproject:$(tag)
                      $(containerRegistry)/mftask:$(tag)
                      $(containerRegistry)/msaccount:$(tag)
                      $(containerRegistry)/msdocument:$(tag)
                      $(containerRegistry)/msproject:$(tag)
                      $(containerRegistry)/mstask:$(tag)
